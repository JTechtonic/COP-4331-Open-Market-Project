swagger: '2.0'
info:
  description: This is the API documentation for the COP 4331 Marketplace App. Made by Jeovan Teixeira, Ethan Fluhr, and Remi Roper.
  version: 1.0.0
  title: Marketplace App
  contact:
    email: je127364@ucf.edu

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /login:
    post:
      tags:
      - Users
      summary: Logs in to the marketplace app
      operationId: dlLogin
      description: Logs in to the marketplace app, returns empty info with an error string saying if it worked or not
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: loginUser
        description: Login
        schema:
          $ref: '#/definitions/Login'
      responses:
        "Empty Error String":
          description: OK
        "No Records Found":
          description: Login couldn't find the user in the Users table with their login and password
  /register:
    post:
      tags:
      - Users
      summary: Regisers new users in to the marketplace app
      operationId: dlRegister
      description: Registers in to the marketplace app, returns new user ID and an error string saying if it worked or not
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: registerUser
        description: Register
        schema:
          $ref: '#/definitions/Register'
      responses:
        "Empty Error String":
          description: OK
        "User Already Exists":
          description: Duplicate User has been Found
  /verifyEmail:
    post:
      tags:
      - Server
      summary: Creates the verification number and sends it out to email in input
      operationId: dlVerifiedNum
      description: Sends an email to the user's email in the input and then outputs the verification code sent to that user.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: VerifiedNum
        description: Verification
        schema:
          $ref: '#/definitions/VerifyEmail'
      responses:
        "Empty Error String":
          description: OK
        "Non-Empty Error String":
          description: An error occured with the email sending API
  /changeVerification:
    post:
      tags:
      - Server
      summary: Changes verification status
      operationId: dlVerificationUpdate
      description: Looks for the user defined by the user id and changes the status of their account verification
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ChangeVerification
        description: VerificationUpdate
        schema:
          $ref: '#/definitions/ChangeVerification'
      responses:
        "Empty Error String":
          description: OK
        "Non-Empty Error String":
          description: An error occured with updating the database
  /editUser:
    post:
      tags:
      - Users
      summary: Edits the user's account info with given fields
      operationId: dlEditUser
      description: Takes in the user's unique identifier and edit's their database document with given input fields.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: editUser
        description: Editing
        schema:
          $ref: '#/definitions/EditUser'
      responses:
        "Empty Error String":
          description: OK
        "Non-Empty Error String":
          description: An error occured with updating the user
  /createPost:
    post:
      tags:
      - Posts
      summary: Creates a new post to show in the marketplace app
      operationId: dlCreatePost
      description: Creates a new post and puts it into the database, returns id of post and error string
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: createPost
        description: Post
        schema:
          $ref: '#/definitions/CreatePost'
      responses:
        "Empty Error String":
          description: OK
        "Post already exists":
          description: Duplicate post has been found
  /editPost:
    post:
      tags:
      - Posts
      summary: Edits the user's post with given fields
      operationId: dlEditPost
      description: Takes in the new post details and edits the post at the given id in the database.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: editPost
        description: Editing
        schema:
          $ref: '#/definitions/EditPost'
      responses:
        "Empty Error String":
          description: OK
        "Non-Empty Error String":
          description: An error occured with updating the post
          
definitions:
  Login:
    type: object
    required:
    - Login
    - Password
    properties:
      username:
        type: string
        example: fred
      password:
        type: string
        example: secret
  Register:
    type: object
    required:
    - First Name
    - Last Name
    - Username
    - Password
    - Email
    - Phone Number
    properties:
      firstname:
        type: string
        example: Fred
      lastname:
        type: string
        example: Doe
      username:
        type: string
        example: fred111
      password:
        type: string
        example: secret
      email:
        type: string
        example: fred@fred.com
      phoneNumber:
        type: string
        example: 4079981234
  VerifyEmail:
    type: object
    required:
    - Email
    properties:
      email:
        type: string
        example: fred@gmail.com
  ChangeVerification:
    type: object
    required:
    - id
    properties:
      id:
        type: string
        example: 12121fafwfaf103012
  EditUser:
    type: object
    required:
    - id
    - New First Name
    - New Last Name
    - New Username
    - New Password
    - New Email
    - New Phone Number
    properties:
      id:
        type: string
        example: 12121fafwfaf103012
      newFirstName:
        type: string
        example: Fred
      newLastName:
        type: string
        example: Doe
      newUserName:
        type: string
        example: fred111
      newPassword:
        type: string
        example: secret
      newEmail:
        type: string
        example: fred@fred.com
      newPhoneNumber:
        type: string
        example: 4079981234
      newAboutMe:
        type: string
        example: Hi I am Fred
  CreatePost:
    type: object
    required:
    - Username
    - Name
    - Genre
    - Price
    - Description
    - Condition
    properties:
      username:
        type: string
        example: Fred1245
      name:
        type: string
        example: Fred
      genre:
        type: string
        example: Cars
      price:
        type: string
        example: 22.49
      desc:
        type: string
        example: Description
      condition:
        type: string
        example: Good as new
  EditPost:
    type: object
    required:
    - id
    - User Name
    - Name
    - Genre
    - Price
    - Description
    - Condition
    properties:
      id:
        type: string
        example: 12121fafwfaf103012
      username:
        type: string
        example: Fred121
      name:
        type: string
        example: Fred Doe
      genre:
        type: string
        example: Cars
      price:
        type: string
        example: 22.49
      desc:
        type: string
        example: Description
      condition:
        type: string
        example: Good as new

host: cop4331-marketplace-98e1376d9db6.herokuapp.com
basePath: /api
schemes:
- https